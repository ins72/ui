version: '3.8'

services:
  core2-frontend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: core2-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - core2-network
    volumes:
      - ./logs:/app/logs
    depends_on:
      - nginx

  nginx:
    image: nginx:alpine
    container_name: core2-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - core2-network
    depends_on:
      - core2-frontend

  redis:
    image: redis:alpine
    container_name: core2-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - core2-network
    command: redis-server --appendonly yes

volumes:
  redis_data:

networks:
  core2-network:
    driver: bridge 